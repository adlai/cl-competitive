;; obsolete
(defmacro split-objs-bind (vars string &body body)
  (let ((position (gensym))
        (s (gensym)))
    (labels ((expand (vars &optional init-pos)
               (if (null vars)
                   body
                   (let ((var (if (listp (car vars)) (car vars) (list (car vars)))))
                     `((multiple-value-bind (,(car var) ,position)
                           ,(if (second var)
                                `(funcall ,(second var) ,s :start ,(or init-pos position))
                                `(parse-integer ,s :start ,(or init-pos position)
                                                   :junk-allowed t))
                         ,@(when (null (cdr vars)) `((declare (ignore ,position))))
                         ,@(expand (cdr vars))))))))
      `(let ((,s ,string))
         (declare (string ,s))
         ,@(expand vars 0)))))
