(eval-when (:compile-toplevel :load-toplevel :execute)
  (load "test-util")
  (load "../disjoint-set.lisp"))

(use-package :test-util)

(with-test (:name disjoint-set)
  (let ((dset (make-disjoint-set 5)))
    (assert (/= (ds-root dset 0) (ds-root dset 1)))
    (assert (= 1 (ds-size dset 0) (ds-root dset 1)))
    (ds-unite! dset 0 1)
    (assert (= (ds-root dset 0) (ds-root dset 1)))
    (assert (not (ds-connected-p dset 3 4)))
    (assert (= 2 (ds-size dset 0)))
    (ds-unite! dset 3 4)
    (assert (ds-connected-p dset 3 4))
    (assert (not (ds-connected-p dset 1 3)))
    (ds-unite! dset 0 4)
    (assert (ds-connected-p dset 1 3))
    (assert (= 4 (ds-size dset 0)))
    (assert (= 1 (ds-size dset 2))))
  (make-disjoint-set 0)
  (make-disjoint-set 1))
