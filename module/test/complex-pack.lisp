(defpackage :cp/test/complex-pack
  (:use :cl :fiveam :cp/complex-pack)
  (:import-from :cp/test/base #:base-suite))
(in-package :cp/test/complex-pack)
(in-suite base-suite)

(define-complex-pack node (slot1 1) (slot2 12) (slot3 34) (slot4 56))
(define-complex-pack nnode (slot1 1) (slot2 12) (slot3 49) (slot4 62))

(test complex-pack/random
  (let ((*test-dribble* nil))
    (dotimes (_ 1000)
      (let* ((slot1 (random (ash 1 1)))
             (slot2 (random (ash 1 12)))
             (slot3 (random (ash 1 34)))
             (slot4 (random (ash 1 56)))
             (node (pack-node slot1 slot2 slot3 slot4)))
        (is (= slot1 (node-slot1 node)))
        (is (= slot2 (node-slot2 node)))
        (is (= slot3 (node-slot3 node)))
        (is (= slot4 (node-slot4 node)))
        (with-unpacking-node (slot1* slot2* slot3* slot4*) node
          (is (= slot1 slot1*))
          (is (= slot2 slot2*))
          (is (= slot3 slot3*))
          (is (= slot4 slot4*)))))
    (dotimes (_ 1000)
      (let* ((slot1 (random (ash 1 1)))
             (slot2 (random (ash 1 12)))
             (slot3 (random (ash 1 49)))
             (slot4 (random (ash 1 62)))
             (nnode (pack-nnode slot1 slot2 slot3 slot4)))
        (is (= slot1 (nnode-slot1 nnode)))
        (is (= slot2 (nnode-slot2 nnode)))
        (is (= slot3 (nnode-slot3 nnode)))
        (is (= slot4 (nnode-slot4 nnode)))
        (with-unpacking-nnode (slot1* slot2* slot3* slot4*) nnode
          (is (= slot1 slot1*))
          (is (= slot2 slot2*))
          (is (= slot3 slot3*))
          (is (= slot4 slot4*)))))))
