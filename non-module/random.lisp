;; Just for an experiment. Please use CL:RANDOM.

(defconstant +divisor+ (expt 2 31))

(let ((x (load-time-value (random +divisor+))))
  (declare ((integer 0 (#.(expt 2 31))) x))
  (defun seed-lcg (initial-number)
    (setq x initial-number))
  (defun random-lcg ()
    (declare (optimize (speed 3) (safety 0)))
    (setq x (logand (+ (* 1103515245 x) 12345) #.(- (expt 2 31) 1)))))

(defconstant +mask32+ #xffffffff)
(declaim ((unsigned-byte 32) *xor32*))
(sb-ext:define-load-time-global *xor32* 2463534242)

(defun random-xor32 ()
  (declare (optimize (speed 3) (safety 0)))
  (let ((x *xor32*))
    (declare ((unsigned-byte 32) x))
    (setq x (ldb (byte 32 0) (logxor x (ash x 13))))
    (setq x (logxor x (ash x -17)))
    (setq *xor32* (ldb (byte 32 0) (logxor x (ash x 5))))))

(defun bench (num)
  (declare (optimize (speed 3) (safety 0))
           ((integer 1 (#.most-positive-fixnum)) num))
  (let ((sum 0)
        (x 2463534242))
    (declare ((integer 0 #.most-positive-fixnum) sum)
             ((unsigned-byte 32) x))
    (dotimes (i num)
      (setq x (ldb (byte 32 0) (logxor x (ash x 13))))
      (setq x (logxor x (ash x -17)))
      (setq x (ldb (byte 32 0) (logxor x (ash x 5))))
      (incf sum (logand 1 x)))
    sum))
